{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\src\\\\MyCalendar.js\";\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n\nvar MyCalendar = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyCalendar, _React$Component);\n\n  function MyCalendar() {\n    _classCallCheck(this, MyCalendar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyCalendar).apply(this, arguments));\n  }\n\n  _createClass(MyCalendar, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(FullCalendar, {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        weekends: false,\n        events: [{\n          title: 'event 1',\n          date: '2019-04-01'\n        }, {\n          title: 'event 2',\n          date: '2019-04-02'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return MyCalendar;\n}(React.Component);\n\nexport { MyCalendar as default };\n\nvar Application = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Application, _React$Component2);\n\n  function Application() {\n    _classCallCheck(this, Application);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Application).apply(this, arguments));\n  }\n\n  _createClass(Application, [{\n    key: \"render\",\n    value: function render() {\n      return;\n\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(External, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Calendar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Application;\n}(React.Component);\n/*\r\n * A simple React component\r\n */\n\n\nvar Calendar = /*#__PURE__*/function (_React$Component3) {\n  _inherits(Calendar, _React$Component3);\n\n  function Calendar() {\n    _classCallCheck(this, Calendar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Calendar).apply(this, arguments));\n  }\n\n  _createClass(Calendar, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"calendar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      $('#calendar').fullCalendar({\n        header: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'month,agendaWeek,agendaDay'\n        },\n        editable: true,\n        droppable: true,\n        // this allows things to be dropped onto the calendar\n        drop: function drop() {\n          // is the \"remove after drop\" checkbox checked?\n          if ($('#drop-remove').is(':checked')) {\n            // if so, remove the element from the \"Draggable Events\" list\n            $(this).remove();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nvar External = /*#__PURE__*/function (_React$Component4) {\n  _inherits(External, _React$Component4);\n\n  function External() {\n    _classCallCheck(this, External);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(External).apply(this, arguments));\n  }\n\n  _createClass(External, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"external-events\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 4\n        }\n      }, \"Draggable Events\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fc-event\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 4\n        }\n      }, \"My Event 1\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fc-event\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 4\n        }\n      }, \"My Event 2\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fc-event\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 4\n        }\n      }, \"My Event 3\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fc-event\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 4\n        }\n      }, \"My Event 4\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fc-event\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 4\n        }\n      }, \"My Event 5\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"drop-remove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"drop-remove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }\n      }, \"remove after drop\")));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      $('#external-events .fc-event').each(function () {\n        // store data so the calendar knows to render an event upon drop\n        $(this).data('event', {\n          title: $.trim($(this).text()),\n          // use the element's text as the event title\n          stick: true // maintain when user navigates (see docs on the renderEvent method)\n\n        }); // make the event draggable using jQuery UI\n\n        $(this).draggable({\n          zIndex: 999,\n          revert: true,\n          // will cause the event to go back to its\n          revertDuration: 0 //  original position after the drag\n\n        });\n      });\n    }\n  }]);\n\n  return External;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/kolya/Documents/GitHub/My_app-calendar/src/MyCalendar.js"],"names":["React","FullCalendar","dayGridPlugin","MyCalendar","title","date","Component","Application","Calendar","$","fullCalendar","header","left","center","right","editable","droppable","drop","is","remove","External","each","data","trim","text","stick","draggable","zIndex","revert","revertDuration"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\n\r\nexport default class MyCalendar extends React.Component {\r\n  render() {\r\n    return (\r\n      <FullCalendar\r\n        plugins={[ dayGridPlugin ]}\r\n        initialView=\"dayGridMonth\"\r\n        weekends={false}\r\n        events={[\r\n          { title: 'event 1', date: '2019-04-01' },\r\n          { title: 'event 2', date: '2019-04-02' }\r\n        ]}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nclass Application extends React.Component {\r\n  render() {\r\n    return\r\n    <div>\r\n    <External />\r\n      <Calendar />\r\n      </div>;\r\n  }\r\n}\r\n\r\n/*\r\n * A simple React component\r\n */\r\nclass Calendar extends React.Component {\r\n  render() {\r\n    return <div id=\"calendar\"></div>;\r\n  }\r\n  componentDidMount() {\r\n    $('#calendar').fullCalendar({\r\n\t\t\theader: {\r\n\t\t\t\tleft: 'prev,next today',\r\n\t\t\t\tcenter: 'title',\r\n\t\t\t\tright: 'month,agendaWeek,agendaDay'\r\n\t\t\t},\r\n\t\t\teditable: true,\r\n\t\t\tdroppable: true, // this allows things to be dropped onto the calendar\r\n\t\t\tdrop: function() {\r\n\t\t\t\t// is the \"remove after drop\" checkbox checked?\r\n\t\t\t\tif ($('#drop-remove').is(':checked')) {\r\n\t\t\t\t\t// if so, remove the element from the \"Draggable Events\" list\r\n\t\t\t\t\t$(this).remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n    })\r\n  }\r\n}\r\n\r\nclass External extends React.Component {\r\n  render() {\r\n    return <div id='external-events'>\r\n\t\t\t<h4>Draggable Events</h4>\r\n\t\t\t<div className='fc-event'>My Event 1</div>\r\n\t\t\t<div className='fc-event'>My Event 2</div>\r\n\t\t\t<div className='fc-event'>My Event 3</div>\r\n\t\t\t<div className='fc-event'>My Event 4</div>\r\n\t\t\t<div className='fc-event'>My Event 5</div>\r\n\t\t\t<p>\r\n\t\t\t\t<input type='checkbox' id='drop-remove' />\r\n\t\t\t\t<label for='drop-remove'>remove after drop</label>\r\n\t\t\t</p>\r\n\t\t</div>;\r\n  }\r\n  componentDidMount() {\r\n\t\t$('#external-events .fc-event').each(function() {\r\n\r\n\t\t\t// store data so the calendar knows to render an event upon drop\r\n\t\t\t$(this).data('event', {\r\n\t\t\t\ttitle: $.trim($(this).text()), // use the element's text as the event title\r\n\t\t\t\tstick: true // maintain when user navigates (see docs on the renderEvent method)\r\n\t\t\t});\r\n\r\n\t\t\t// make the event draggable using jQuery UI\r\n\t\t\t$(this).draggable({\r\n\t\t\t\tzIndex: 999,\r\n\t\t\t\trevert: true,      // will cause the event to go back to its\r\n\t\t\t\trevertDuration: 0  //  original position after the drag\r\n\t\t\t});\r\n\t\t});\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}