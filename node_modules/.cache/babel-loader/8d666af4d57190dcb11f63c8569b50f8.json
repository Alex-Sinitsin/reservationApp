{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\src\\\\MyCalendar.js\";\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n\nvar MyCalendar = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyCalendar, _React$Component);\n\n  function MyCalendar() {\n    _classCallCheck(this, MyCalendar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyCalendar).apply(this, arguments));\n  }\n\n  _createClass(MyCalendar, [{\n    key: \"render\",\n    value: function render() {\n      var localizer = momentLocalizer(moment);\n\n      var _useState = useState([]),\n          _useState2 = _slicedToArray(_useState, 2),\n          eventsList = _useState2[0],\n          setEventsList = _useState2[1];\n\n      var _useState3 = useState([]),\n          _useState4 = _slicedToArray(_useState3, 2),\n          alarmTime2 = _useState4[0],\n          setAlarm = _useState4[1];\n\n      var _useState5 = useState([]),\n          _useState6 = _slicedToArray(_useState5, 2),\n          seconds = _useState6[0],\n          setSeconds = _useState6[1];\n\n      var state = {\n        currentTime: new Date().toLocaleTimeString('ru', {\n          hour12: false\n        })\n      };\n      useEffect(function () {\n        var timer = setInterval(function () {\n          setSeconds(state.currentTime);\n        }, 1000);\n        return function () {\n          return clearInterval(timer);\n        };\n      });\n\n      function handleSelect(_ref) {\n        var start = _ref.start,\n            end = _ref.end,\n            userName = _ref.userName;\n        var title = window.prompt(\"New Event name\");\n\n        if (title) {\n          var newEvent = {\n            userName: {\n              userName: userName\n            },\n            start: start,\n            end: end,\n            title: title,\n            alarmTime1: start.toLocaleTimeString('ru', {\n              hour12: false\n            })\n          };\n          setEventsList([].concat(_toConsumableArray(eventsList), [newEvent]));\n          setAlarm([].concat(_toConsumableArray(alarmTime2), [newEvent.alarmTime1]));\n        }\n      }\n\n      var counter = 0;\n\n      while (counter != 100) {\n        if (state.currentTime === alarmTime2[counter]) {\n          alert(\"its time!\");\n        }\n\n        ;\n        counter = counter + 1;\n      }\n\n      return /*#__PURE__*/React.createElement(FullCalendar, {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        weekends: false,\n        events: [{\n          title: 'event 1',\n          date: '2019-04-01'\n        }, {\n          title: 'event 2',\n          date: '2019-04-02'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return MyCalendar;\n}(React.Component);\n\nexport { MyCalendar as default };","map":{"version":3,"sources":["C:/Users/kolya/Documents/GitHub/My_app-calendar/src/MyCalendar.js"],"names":["React","FullCalendar","dayGridPlugin","MyCalendar","localizer","momentLocalizer","moment","useState","eventsList","setEventsList","alarmTime2","setAlarm","seconds","setSeconds","state","currentTime","Date","toLocaleTimeString","hour12","useEffect","timer","setInterval","clearInterval","handleSelect","start","end","userName","title","window","prompt","newEvent","alarmTime1","counter","alert","date","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CAA+C;;AAC/C,OAAOC,aAAP,MAA0B,uBAA1B,C,CAAkD;;IAE7BC,U;;;;;;;;;;;6BACV;AACT,UAAMC,SAAS,GAAGC,eAAe,CAACC,MAAD,CAAjC;;AADS,sBAE+BC,QAAQ,CAAC,EAAD,CAFvC;AAAA;AAAA,UAEEC,UAFF;AAAA,UAEcC,aAFd;;AAAA,uBAG0BF,QAAQ,CAAC,EAAD,CAHlC;AAAA;AAAA,UAGEG,UAHF;AAAA,UAGcC,QAHd;;AAAA,uBAIyBJ,QAAQ,CAAC,EAAD,CAJjC;AAAA;AAAA,UAIEK,OAJF;AAAA,UAIWC,UAJX;;AAML,UAAIC,KAAK,GAAG;AACTC,QAAAA,WAAW,EAAE,IAAIC,IAAJ,GAAWC,kBAAX,CAA8B,IAA9B,EAAoC;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAApC;AADJ,OAAZ;AAIAC,MAAAA,SAAS,CAAC,YAAM;AACP,YAAMC,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC3BR,UAAAA,UAAU,CACVC,KAAK,CAACC,WADI,CAAV;AAEJ,SAHwB,EAGtB,IAHsB,CAAzB;AAIA,eAAO;AAAA,iBAAMO,aAAa,CAACF,KAAD,CAAnB;AAAA,SAAP;AACR,OANQ,CAAT;;AAQA,eAASG,YAAT,OAAgD;AAAA,YAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,YAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,YAAZC,QAAY,QAAZA,QAAY;AAC5C,YAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,gBAAd,CAAd;;AACA,YAAIF,KAAJ,EAAW;AACT,cAAIG,QAAQ,GAAG;AACbJ,YAAAA,QAAQ,EAAE;AAACA,cAAAA,QAAQ,EAARA;AAAD,aADG;AAEbF,YAAAA,KAAK,EAAEA,KAFM;AAGbC,YAAAA,GAAG,EAAEA,GAHQ;AAIbE,YAAAA,KAAK,EAAEA,KAJM;AAKbI,YAAAA,UAAU,EAAEP,KAAK,CAACP,kBAAN,CAAyB,IAAzB,EAA+B;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAA/B;AALC,WAAf;AAOAT,UAAAA,aAAa,8BAAKD,UAAL,IAAiBsB,QAAjB,GAAb;AACAnB,UAAAA,QAAQ,8BAAKD,UAAL,IAAiBoB,QAAQ,CAACC,UAA1B,GAAR;AACC;AACF;;AACL,UAAIC,OAAO,GAAG,CAAd;;AACA,aAAMA,OAAO,IAAI,GAAjB,EAAqB;AAChB,YAAGlB,KAAK,CAACC,WAAN,KAAsBL,UAAU,CAACsB,OAAD,CAAnC,EAA8C;AACtCC,UAAAA,KAAK,CAAC,WAAD,CAAL;AACC;;AAAA;AACRD,QAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACA;;AAGR,0BACE,oBAAC,YAAD;AACE,QAAA,OAAO,EAAE,CAAE9B,aAAF,CADX;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,QAAQ,EAAE,KAHZ;AAIE,QAAA,MAAM,EAAE,CACN;AAAEyB,UAAAA,KAAK,EAAE,SAAT;AAAoBO,UAAAA,IAAI,EAAE;AAA1B,SADM,EAEN;AAAEP,UAAAA,KAAK,EAAE,SAAT;AAAoBO,UAAAA,IAAI,EAAE;AAA1B,SAFM,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;;EArDqClC,KAAK,CAACmC,S;;SAAzBhC,U","sourcesContent":["import React from 'react'\r\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\n\r\nexport default class MyCalendar extends React.Component {\r\n  render() {\r\n  const localizer = momentLocalizer(moment);\r\n      const [eventsList, setEventsList] = useState([]);\r\n      const [alarmTime2, setAlarm] = useState([]);\r\n      const [seconds, setSeconds] = useState([]);\r\n\r\n      var state = {\r\n         currentTime: new Date().toLocaleTimeString('ru', { hour12: false }),\r\n         }\r\n\r\n      useEffect(() => {\r\n               const timer = setInterval(() => {\r\n                    setSeconds(\r\n                    state.currentTime )\r\n               }, 1000);\r\n               return () => clearInterval(timer);\r\n      });\r\n\r\n      function handleSelect({ start, end, userName }) {\r\n          const title = window.prompt(\"New Event name\");\r\n          if (title) {\r\n            var newEvent = {\r\n              userName: {userName},\r\n              start: start,\r\n              end: end,\r\n              title: title,\r\n              alarmTime1: start.toLocaleTimeString('ru', { hour12: false })\r\n            };\r\n            setEventsList([...eventsList, newEvent]);\r\n            setAlarm([...alarmTime2, newEvent.alarmTime1]);\r\n            }\r\n          }\r\n      var counter = 0;\r\n      while(counter != 100){\r\n           if(state.currentTime === alarmTime2[counter]) {\r\n                   alert(\"its time!\");\r\n                   };\r\n            counter = counter + 1;\r\n           }\r\n\r\n\r\n    return (\r\n      <FullCalendar\r\n        plugins={[ dayGridPlugin ]}\r\n        initialView=\"dayGridMonth\"\r\n        weekends={false}\r\n        events={[\r\n          { title: 'event 1', date: '2019-04-01' },\r\n          { title: 'event 2', date: '2019-04-02' }\r\n        ]}\r\n      />\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}