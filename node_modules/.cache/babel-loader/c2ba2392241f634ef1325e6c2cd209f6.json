{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\src\\\\MyCalendar.js\";\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport React, { useState, Component, useEffect, setState } from \"react\";\nimport 'moment/locale/ru';\nimport moment from 'moment';\nimport { momentLocalizer } from 'react-big-calendar';\n\nvar MyCalendar = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyCalendar, _React$Component);\n\n  function MyCalendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyCalendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyCalendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleDateClick = function (arg) {\n      // bind with an arrow function\n      alert(arg.dateStr);\n    };\n\n    return _this;\n  }\n\n  _createClass(MyCalendar, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(FullCalendar, {\n        height: 500,\n        contentHeight: 600,\n        plugins: [dayGridPlugin, interactionPlugin],\n        dateClick: this.handleDateClick,\n        eventContent: renderEventContent,\n        events: [{\n          title: 'event 1',\n          date: '2019-04-01'\n        }, {\n          title: 'event 2',\n          date: '2019-04-02'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return MyCalendar;\n}(React.Component);\n\nexport { MyCalendar as default };\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, eventInfo.timeText), /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, eventInfo.event.title));\n}","map":{"version":3,"sources":["C:/Users/kolya/Documents/GitHub/My_app-calendar/src/MyCalendar.js"],"names":["FullCalendar","dayGridPlugin","interactionPlugin","React","useState","Component","useEffect","setState","moment","momentLocalizer","MyCalendar","handleDateClick","arg","alert","dateStr","renderEventContent","title","date","eventInfo","timeText","event"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,qBAAzB,C,CAA+C;;AAC/C,OAAOC,aAAP,MAA0B,uBAA1B,C,CAAkD;;AAClD,OAAOC,iBAAP,MAA8B,2BAA9B,C,CAA0D;;AAC1D,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAiE,OAAjE;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;IAEqBC,U;;;;;;;;;;;;;;;;UAkBnBC,e,GAAkB,UAACC,GAAD,EAAS;AAAE;AAC3BC,MAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD,K;;;;;;;6BAnBQ;AACP,0BACE,oBAAC,YAAD;AACQ,QAAA,MAAM,EAAE,GADhB;AAEQ,QAAA,aAAa,EAAE,GAFvB;AAIE,QAAA,OAAO,EAAE,CAAEb,aAAF,EAAiBC,iBAAjB,CAJX;AAKE,QAAA,SAAS,EAAE,KAAKS,eALlB;AAME,QAAA,YAAY,EAAEI,kBANhB;AAOE,QAAA,MAAM,EAAE,CACJ;AAAEC,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,IAAI,EAAE;AAA1B,SADI,EAEJ;AAAED,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,IAAI,EAAE;AAA1B,SAFI,CAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAcD;;;;EAhBqCd,KAAK,CAACE,S;;SAAzBK,U;;AAwBrB,SAASK,kBAAT,CAA4BG,SAA5B,EAAuC;AACrC,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,SAAS,CAACC,QAAd,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,SAAS,CAACE,KAAV,CAAgBJ,KAApB,CAFF,CADF;AAMD","sourcesContent":["import FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\nimport interactionPlugin from \"@fullcalendar/interaction\" // needed for dayClick\r\nimport React, { useState, Component, useEffect, setState  } from \"react\";\r\nimport 'moment/locale/ru';\r\nimport moment from 'moment'\r\nimport { momentLocalizer } from 'react-big-calendar'\r\n\r\nexport default class MyCalendar extends React.Component {\r\n  render() {\r\n    return (\r\n      <FullCalendar\r\n              height={500}\r\n              contentHeight={600}\r\n\r\n        plugins={[ dayGridPlugin, interactionPlugin ]}\r\n        dateClick={this.handleDateClick}\r\n        eventContent={renderEventContent}\r\n        events={[\r\n            { title: 'event 1', date: '2019-04-01' },\r\n            { title: 'event 2', date: '2019-04-02' }\r\n          ]}\r\n      />\r\n    )\r\n  }\r\n\r\n  handleDateClick = (arg) => { // bind with an arrow function\r\n    alert(arg.dateStr)\r\n  }\r\n\r\n}\r\n\r\nfunction renderEventContent(eventInfo) {\r\n  return (\r\n    <>\r\n      <b>{eventInfo.timeText}</b>\r\n      <i>{eventInfo.event.title}</i>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}