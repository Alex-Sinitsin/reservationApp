{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kolya\\\\Documents\\\\GitHub\\\\My_app-calendar\\\\src\\\\MyCalendar.js\";\nimport React, { useState, Component, useEffect, setState } from \"react\";\nimport { Alert, useAlert } from 'react-alert';\nimport { userName } from './Home';\nimport Clock from 'react-clock';\nimport { momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport interactionPlugin, { Draggable } from '@fullcalendar/interaction';\nexport default function MyCalendar() {\n  var events = [{\n    title: \"today's event\",\n    date: new Date()\n  }];\n  var localizer = momentLocalizer(moment);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventsList = _useState2[0],\n      setEventsList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alarmTime2 = _useState4[0],\n      setAlarm = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      seconds = _useState6[0],\n      setSeconds = _useState6[1];\n\n  var state = {\n    currentTime: new Date().toLocaleTimeString('ru', {\n      hour12: false\n    })\n  };\n  useEffect(function () {\n    var timer = setInterval(function () {\n      setSeconds(state.currentTime);\n    }, 1000);\n    return function () {\n      return clearInterval(timer);\n    };\n  });\n  new Draggable(containerEl, {\n    itemSelector: '.item-class',\n    eventData: function eventData(eventEl) {\n      return {\n        title: eventEl.innerText,\n        duration: '02:00'\n      };\n    }\n  });\n  var counter = 0;\n\n  while (counter != 100) {\n    if (state.currentTime === alarmTime2[counter]) {\n      alert(\"its time!\");\n    }\n\n    ;\n    counter = counter + 1;\n  }\n\n  return /*#__PURE__*/React.createElement(FullCalendar, {\n    height: 750,\n    slotDuration: '00:30:00',\n    defaultView: \"dayGridMonth\",\n    headerToolbar: {\n      left: \"prev,next\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n    },\n    plugins: [dayGridPlugin, timeGridPlugin],\n    events: eventsList,\n    onSelectSlot: Draggable,\n    locale: \"ru\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kolya/Documents/GitHub/My_app-calendar/src/MyCalendar.js"],"names":["React","useState","Component","useEffect","setState","Alert","useAlert","userName","Clock","momentLocalizer","moment","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Draggable","MyCalendar","events","title","date","Date","localizer","eventsList","setEventsList","alarmTime2","setAlarm","seconds","setSeconds","state","currentTime","toLocaleTimeString","hour12","timer","setInterval","clearInterval","containerEl","itemSelector","eventData","eventEl","innerText","duration","counter","alert","left","center","right"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAiE,OAAjE;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,aAAhC;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,OAAO,+BAAP;AACA,OAAO,gCAAP;AACA,OAAO,iCAAP;AAEA,OAAOC,iBAAP,IAA4BC,SAA5B,QAA6C,2BAA7C;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,MAAMC,MAAM,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAhC,GAAD,CAAf;AAEE,MAAMC,SAAS,GAAGZ,eAAe,CAACC,MAAD,CAAjC;;AAHiC,kBAIOT,QAAQ,CAAC,EAAD,CAJf;AAAA;AAAA,MAItBqB,UAJsB;AAAA,MAIVC,aAJU;;AAAA,mBAKEtB,QAAQ,CAAC,EAAD,CALV;AAAA;AAAA,MAKtBuB,UALsB;AAAA,MAKVC,QALU;;AAAA,mBAMCxB,QAAQ,CAAC,EAAD,CANT;AAAA;AAAA,MAMtByB,OANsB;AAAA,MAMbC,UANa;;AAQ7B,MAAIC,KAAK,GAAG;AACTC,IAAAA,WAAW,EAAE,IAAIT,IAAJ,GAAWU,kBAAX,CAA8B,IAA9B,EAAoC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAApC;AADJ,GAAZ;AAIA5B,EAAAA,SAAS,CAAC,YAAM;AACP,QAAM6B,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC3BN,MAAAA,UAAU,CACVC,KAAK,CAACC,WADI,CAAV;AAEJ,KAHwB,EAGtB,IAHsB,CAAzB;AAIA,WAAO;AAAA,aAAMK,aAAa,CAACF,KAAD,CAAnB;AAAA,KAAP;AACR,GANQ,CAAT;AAQA,MAAIjB,SAAJ,CAAcoB,WAAd,EAA2B;AACzBC,IAAAA,YAAY,EAAE,aADW;AAEzBC,IAAAA,SAAS,EAAE,mBAASC,OAAT,EAAkB;AAC3B,aAAO;AACLpB,QAAAA,KAAK,EAAEoB,OAAO,CAACC,SADV;AAELC,QAAAA,QAAQ,EAAE;AAFL,OAAP;AAID;AAPwB,GAA3B;AAUA,MAAIC,OAAO,GAAG,CAAd;;AACA,SAAMA,OAAO,IAAI,GAAjB,EAAqB;AAChB,QAAGb,KAAK,CAACC,WAAN,KAAsBL,UAAU,CAACiB,OAAD,CAAnC,EAA8C;AACtCC,MAAAA,KAAK,CAAC,WAAD,CAAL;AACC;;AAAA;AACRD,IAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACA;;AAEZ,sBACI,oBAAC,YAAD;AACE,IAAA,MAAM,EAAE,GADV;AAEE,IAAA,YAAY,EAAE,UAFhB;AAGE,IAAA,WAAW,EAAC,cAHd;AAIU,IAAA,aAAa,EAAE;AACbE,MAAAA,IAAI,EAAE,WADO;AAEbC,MAAAA,MAAM,EAAE,OAFK;AAGbC,MAAAA,KAAK,EAAE;AAHM,KAJzB;AASE,IAAA,OAAO,EAAE,CAACjC,aAAD,EAAgBC,cAAhB,CATX;AAUE,IAAA,MAAM,EAAES,UAVV;AAWE,IAAA,YAAY,EAAEP,SAXhB;AAYE,IAAA,MAAM,EAAC,IAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBD","sourcesContent":["import React, { useState, Component, useEffect, setState  } from \"react\";\r\nimport { Alert, useAlert } from 'react-alert'\r\nimport {userName} from './Home';\r\nimport Clock from 'react-clock';\r\nimport { momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\n\r\nimport \"@fullcalendar/common/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\n\r\nimport interactionPlugin, { Draggable } from '@fullcalendar/interaction';\r\n\r\nexport default function MyCalendar() {\r\n  const events = [{ title: \"today's event\", date: new Date() }];\r\n\r\n    const localizer = momentLocalizer(moment);\r\n        const [eventsList, setEventsList] = useState([]);\r\n        const [alarmTime2, setAlarm] = useState([]);\r\n        const [seconds, setSeconds] = useState([]);\r\n\r\n        var state = {\r\n           currentTime: new Date().toLocaleTimeString('ru', { hour12: false }),\r\n           }\r\n\r\n        useEffect(() => {\r\n                 const timer = setInterval(() => {\r\n                      setSeconds(\r\n                      state.currentTime )\r\n                 }, 1000);\r\n                 return () => clearInterval(timer);\r\n        });\r\n\r\n        new Draggable(containerEl, {\r\n          itemSelector: '.item-class',\r\n          eventData: function(eventEl) {\r\n            return {\r\n              title: eventEl.innerText,\r\n              duration: '02:00'\r\n            };\r\n          }\r\n        });\r\n\r\n        var counter = 0;\r\n        while(counter != 100){\r\n             if(state.currentTime === alarmTime2[counter]) {\r\n                     alert(\"its time!\");\r\n                     };\r\n              counter = counter + 1;\r\n             }\r\n\r\n  return (\r\n      <FullCalendar\r\n        height={750}\r\n        slotDuration={'00:30:00'}\r\n        defaultView=\"dayGridMonth\"\r\n                headerToolbar={{\r\n                  left: \"prev,next\",\r\n                  center: \"title\",\r\n                  right: \"dayGridMonth,timeGridWeek,timeGridDay\"\r\n                }}\r\n        plugins={[dayGridPlugin, timeGridPlugin]}\r\n        events={eventsList}\r\n        onSelectSlot={Draggable}\r\n        locale=\"ru\"\r\n      />\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}