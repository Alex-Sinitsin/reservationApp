{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport Queue from '@material-ui/icons/Queue';\nimport { Link } from 'react-router-dom';\nimport { stringify } from 'query-string';\nimport { useResourceContext } from 'ra-core';\nimport Button from './Button';\nexport var CloneButton = function CloneButton(props) {\n  var _a = props.basePath,\n      basePath = _a === void 0 ? '' : _a,\n      _b = props.label,\n      label = _b === void 0 ? 'ra.action.clone' : _b,\n      _c = props.scrollToTop,\n      scrollToTop = _c === void 0 ? true : _c,\n      record = props.record,\n      _d = props.icon,\n      icon = _d === void 0 ? defaultIcon : _d,\n      rest = __rest(props, [\"basePath\", \"label\", \"scrollToTop\", \"record\", \"icon\"]);\n\n  var resource = useResourceContext();\n  var pathname = basePath ? basePath + \"/create\" : \"/\" + resource + \"/create\";\n  return React.createElement(Button, __assign({\n    component: Link,\n    to: record ? {\n      pathname: pathname,\n      search: stringify({\n        source: JSON.stringify(omitId(record))\n      }),\n      state: {\n        _scrollToTop: scrollToTop\n      }\n    } : pathname,\n    label: label,\n    onClick: stopPropagation\n  }, rest), icon);\n};\nvar defaultIcon = React.createElement(Queue, null); // useful to prevent click bubbling in a datagrid with rowClick\n\nvar stopPropagation = function stopPropagation(e) {\n  return e.stopPropagation();\n};\n\nvar omitId = function omitId(_a) {\n  var id = _a.id,\n      rest = __rest(_a, [\"id\"]);\n\n  return rest;\n};\n\nCloneButton.propTypes = {\n  basePath: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.string,\n  record: PropTypes.any\n};\nexport default memo(CloneButton);","map":null,"metadata":{},"sourceType":"module"}